// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$icon-cellmiin-name: 'icon-cellmiin';
$icon-cellmiin-x: 0px;
$icon-cellmiin-y: 0px;
$icon-cellmiin-offset-x: 0px;
$icon-cellmiin-offset-y: 0px;
$icon-cellmiin-width: 200px;
$icon-cellmiin-height: 100px;
$icon-cellmiin-total-width: 610px;
$icon-cellmiin-total-height: 310px;
$icon-cellmiin-image: '../dist/images/sprite/sprite.png';
$icon-cellmiin: (0px, 0px, 0px, 0px, 200px, 100px, 610px, 310px, '../dist/images/sprite/sprite.png', 'icon-cellmiin', );
$icon-foreverskin-name: 'icon-foreverskin';
$icon-foreverskin-x: 205px;
$icon-foreverskin-y: 0px;
$icon-foreverskin-offset-x: -205px;
$icon-foreverskin-offset-y: 0px;
$icon-foreverskin-width: 200px;
$icon-foreverskin-height: 100px;
$icon-foreverskin-total-width: 610px;
$icon-foreverskin-total-height: 310px;
$icon-foreverskin-image: '../dist/images/sprite/sprite.png';
$icon-foreverskin: (205px, 0px, -205px, 0px, 200px, 100px, 610px, 310px, '../dist/images/sprite/sprite.png', 'icon-foreverskin', );
$icon-ghd-name: 'icon-ghd';
$icon-ghd-x: 0px;
$icon-ghd-y: 105px;
$icon-ghd-offset-x: 0px;
$icon-ghd-offset-y: -105px;
$icon-ghd-width: 200px;
$icon-ghd-height: 100px;
$icon-ghd-total-width: 610px;
$icon-ghd-total-height: 310px;
$icon-ghd-image: '../dist/images/sprite/sprite.png';
$icon-ghd: (0px, 105px, 0px, -105px, 200px, 100px, 610px, 310px, '../dist/images/sprite/sprite.png', 'icon-ghd', );
$icon-koelf-name: 'icon-koelf';
$icon-koelf-x: 205px;
$icon-koelf-y: 105px;
$icon-koelf-offset-x: -205px;
$icon-koelf-offset-y: -105px;
$icon-koelf-width: 200px;
$icon-koelf-height: 100px;
$icon-koelf-total-width: 610px;
$icon-koelf-total-height: 310px;
$icon-koelf-image: '../dist/images/sprite/sprite.png';
$icon-koelf: (205px, 105px, -205px, -105px, 200px, 100px, 610px, 310px, '../dist/images/sprite/sprite.png', 'icon-koelf', );
$icon-nioxin-name: 'icon-nioxin';
$icon-nioxin-x: 0px;
$icon-nioxin-y: 210px;
$icon-nioxin-offset-x: 0px;
$icon-nioxin-offset-y: -210px;
$icon-nioxin-width: 200px;
$icon-nioxin-height: 100px;
$icon-nioxin-total-width: 610px;
$icon-nioxin-total-height: 310px;
$icon-nioxin-image: '../dist/images/sprite/sprite.png';
$icon-nioxin: (0px, 210px, 0px, -210px, 200px, 100px, 610px, 310px, '../dist/images/sprite/sprite.png', 'icon-nioxin', );
$icon-oattbe-name: 'icon-oattbe';
$icon-oattbe-x: 205px;
$icon-oattbe-y: 210px;
$icon-oattbe-offset-x: -205px;
$icon-oattbe-offset-y: -210px;
$icon-oattbe-width: 200px;
$icon-oattbe-height: 100px;
$icon-oattbe-total-width: 610px;
$icon-oattbe-total-height: 310px;
$icon-oattbe-image: '../dist/images/sprite/sprite.png';
$icon-oattbe: (205px, 210px, -205px, -210px, 200px, 100px, 610px, 310px, '../dist/images/sprite/sprite.png', 'icon-oattbe', );
$icon-opi-name: 'icon-opi';
$icon-opi-x: 410px;
$icon-opi-y: 0px;
$icon-opi-offset-x: -410px;
$icon-opi-offset-y: 0px;
$icon-opi-width: 200px;
$icon-opi-height: 100px;
$icon-opi-total-width: 610px;
$icon-opi-total-height: 310px;
$icon-opi-image: '../dist/images/sprite/sprite.png';
$icon-opi: (410px, 0px, -410px, 0px, 200px, 100px, 610px, 310px, '../dist/images/sprite/sprite.png', 'icon-opi', );
$icon-sp-name: 'icon-sp';
$icon-sp-x: 410px;
$icon-sp-y: 105px;
$icon-sp-offset-x: -410px;
$icon-sp-offset-y: -105px;
$icon-sp-width: 200px;
$icon-sp-height: 100px;
$icon-sp-total-width: 610px;
$icon-sp-total-height: 310px;
$icon-sp-image: '../dist/images/sprite/sprite.png';
$icon-sp: (410px, 105px, -410px, -105px, 200px, 100px, 610px, 310px, '../dist/images/sprite/sprite.png', 'icon-sp', );
$spritesheet-width: 610px;
$spritesheet-height: 310px;
$spritesheet-image: '../dist/images/sprite/sprite.png';
$spritesheet-sprites: ($icon-cellmiin, $icon-foreverskin, $icon-ghd, $icon-koelf, $icon-nioxin, $icon-oattbe, $icon-opi, $icon-sp, );
$spritesheet: (610px, 310px, '../dist/images/sprite/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
